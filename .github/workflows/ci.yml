name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Build the application using Maven  
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests

    - name: Run Build Complete
      run: echo "Run Build Completed"

    # TODO: The workflow permissions should be set to "Read and Write" to test this part.
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # Submitting the graph improves the quality of Dependabotâ€™s checks.
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
    #  with:
    #    github_token: ${{ secrets.GITHUB_TOKEN }}

  test:
    needs: build
    runs-on: ubuntu-latest
  
    steps: 
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
  
    # Run tests using Maven
    - name: Run Tests
      run: mvn test -X
  
    - name: Run Tests Complete
      run: echo "Run Tests Completed"
  
  login:
    needs: test
    runs-on: ubuntu-latest
  
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  build-image-test:
    needs: login
    runs-on: ubuntu-latest

    steps:
      # It helps you run builds on architectures like amd64, arm64, etc.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # It allows for multi-platform builds, build caching, and more efficient Docker image builds.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check Docker tag
        run: echo "${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_IMAGE }}:latest"
  
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_IMAGE }}:latest
          context: .
          file: ./Dockerfile
